
TimerCount_PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  000001ce  00000262  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800102  00800102  00000264  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000294  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000002d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000877  00000000  00000000  0000030c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000079c  00000000  00000000  00000b83  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002ef  00000000  00000000  0000131f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000090  00000000  00000000  00001610  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ff  00000000  00000000  000016a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000db  00000000  00000000  00001a9f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001b7a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__vector_6>
  1a:	00 00       	nop
  1c:	93 c0       	rjmp	.+294    	; 0x144 <__vector_7>
  1e:	00 00       	nop
  20:	bb c0       	rjmp	.+374    	; 0x198 <__vector_8>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee ec       	ldi	r30, 0xCE	; 206
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 30       	cpi	r26, 0x02	; 2
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e0       	ldi	r26, 0x02	; 2
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 30       	cpi	r26, 0x04	; 4
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	82 c0       	rjmp	.+260    	; 0x1ca <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:
volatile int Light = 0;
volatile unsigned char Light_flag = 1;

int main()
{
	DDRB = 0x80;
  c8:	80 e8       	ldi	r24, 0x80	; 128
  ca:	87 bb       	out	0x17, r24	; 23
	
	DDRE = 0x00;
  cc:	12 b8       	out	0x02, r1	; 2
	
	//TCCR2 = (1<<WGM01 | 1<<COM01 | 1<<CS01);//	0110 0010  0111 0111
	TCCR2 = 0x62;
  ce:	82 e6       	ldi	r24, 0x62	; 98
  d0:	85 bd       	out	0x25, r24	; 37
	// WGM : 010 =>	PC PWM 모드
	//		 PWM 주기 : F_CPU/256/2/8 = 3.6 KHz
	// CS01 : 010 => 분주비 8
	//COM01 : 업카운트시 Clear, 다운카운트시 Set 으로 설정
	
	TCNT2 = 0x00;	//
  d2:	14 bc       	out	0x24, r1	; 36
	
	EICRB = 0xFF;	//4567 interrupt hight edge
  d4:	8f ef       	ldi	r24, 0xFF	; 255
  d6:	8a bf       	out	0x3a, r24	; 58
	EIMSK = 0xf0;	//4567 interrupt 
  d8:	80 ef       	ldi	r24, 0xF0	; 240
  da:	89 bf       	out	0x39, r24	; 57
	EIFR = 0xF0;	//4567 interrupt clear
  dc:	88 bf       	out	0x38, r24	; 56
	
	sei();
  de:	78 94       	sei
	
	while(1)
	{
		if(Light_flag)
  e0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  e4:	88 23       	and	r24, r24
  e6:	e1 f3       	breq	.-8      	; 0xe0 <main+0x18>
		{			
			OCR2 = Light;
  e8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
  ec:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x1>
  f0:	83 bd       	out	0x23, r24	; 35
			Light_flag = 0;
  f2:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
  f6:	f4 cf       	rjmp	.-24     	; 0xe0 <main+0x18>

000000f8 <__vector_6>:
	
	return 0;
}

SIGNAL(INT5_vect)
{
  f8:	1f 92       	push	r1
  fa:	0f 92       	push	r0
  fc:	0f b6       	in	r0, 0x3f	; 63
  fe:	0f 92       	push	r0
 100:	11 24       	eor	r1, r1
 102:	8f 93       	push	r24
 104:	9f 93       	push	r25
	cli();
 106:	f8 94       	cli
	Light -= 51;	//LED 밝기 감소
 108:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 10c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x1>
 110:	c3 97       	sbiw	r24, 0x33	; 51
 112:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_end+0x1>
 116:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
	if(Light <0 )
 11a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 11e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x1>
 122:	99 23       	and	r25, r25
 124:	24 f4       	brge	.+8      	; 0x12e <__vector_6+0x36>
	Light = 0;
 126:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x1>
 12a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
	Light_flag = 1;
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	sei();
 134:	78 94       	sei
	
}
 136:	9f 91       	pop	r25
 138:	8f 91       	pop	r24
 13a:	0f 90       	pop	r0
 13c:	0f be       	out	0x3f, r0	; 63
 13e:	0f 90       	pop	r0
 140:	1f 90       	pop	r1
 142:	18 95       	reti

00000144 <__vector_7>:

SIGNAL(INT6_vect)
{
 144:	1f 92       	push	r1
 146:	0f 92       	push	r0
 148:	0f b6       	in	r0, 0x3f	; 63
 14a:	0f 92       	push	r0
 14c:	11 24       	eor	r1, r1
 14e:	8f 93       	push	r24
 150:	9f 93       	push	r25
	cli();
 152:	f8 94       	cli
	Light += 51;	//LED 밝기 증가
 154:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 158:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x1>
 15c:	c3 96       	adiw	r24, 0x33	; 51
 15e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_end+0x1>
 162:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
	if(Light >255 )
 166:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 16a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x1>
 16e:	8f 3f       	cpi	r24, 0xFF	; 255
 170:	91 05       	cpc	r25, r1
 172:	39 f0       	breq	.+14     	; 0x182 <__vector_7+0x3e>
 174:	34 f0       	brlt	.+12     	; 0x182 <__vector_7+0x3e>
	Light = 255;
 176:	8f ef       	ldi	r24, 0xFF	; 255
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_end+0x1>
 17e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
	Light_flag = 1;
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	sei();
 188:	78 94       	sei
	
}
 18a:	9f 91       	pop	r25
 18c:	8f 91       	pop	r24
 18e:	0f 90       	pop	r0
 190:	0f be       	out	0x3f, r0	; 63
 192:	0f 90       	pop	r0
 194:	1f 90       	pop	r1
 196:	18 95       	reti

00000198 <__vector_8>:
SIGNAL(INT7_vect)
{
 198:	1f 92       	push	r1
 19a:	0f 92       	push	r0
 19c:	0f b6       	in	r0, 0x3f	; 63
 19e:	0f 92       	push	r0
 1a0:	11 24       	eor	r1, r1
 1a2:	8f 93       	push	r24
 1a4:	9f 93       	push	r25
	
	cli();
 1a6:	f8 94       	cli
	Light = 255;
 1a8:	8f ef       	ldi	r24, 0xFF	; 255
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_end+0x1>
 1b0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
	Light_flag = 1;
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	sei();
 1ba:	78 94       	sei
 1bc:	9f 91       	pop	r25
 1be:	8f 91       	pop	r24
 1c0:	0f 90       	pop	r0
 1c2:	0f be       	out	0x3f, r0	; 63
 1c4:	0f 90       	pop	r0
 1c6:	1f 90       	pop	r1
 1c8:	18 95       	reti

000001ca <_exit>:
 1ca:	f8 94       	cli

000001cc <__stop_program>:
 1cc:	ff cf       	rjmp	.-2      	; 0x1cc <__stop_program>
