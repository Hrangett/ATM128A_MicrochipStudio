
Digital Doorlock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000056  00800100  00000824  000008b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000824  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800156  00800156  0000090e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000090e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000940  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000980  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c26  00000000  00000000  00000a50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bad  00000000  00000000  00002676  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bd8  00000000  00000000  00003223  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00003dfc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000508  00000000  00000000  00003ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011a8  00000000  00000000  00004504  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  000056ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	d8 c0       	rjmp	.+432    	; 0x1d2 <__vector_8>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e2       	ldi	r30, 0x24	; 36
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 35       	cpi	r26, 0x56	; 86
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e5       	ldi	r26, 0x56	; 86
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a7 35       	cpi	r26, 0x57	; 87
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	41 d3       	rcall	.+1666   	; 0x746 <main>
  c4:	ad c3       	rjmp	.+1882   	; 0x820 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <Lcd_Data>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c8:	e5 e6       	ldi	r30, 0x65	; 101
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	90 81       	ld	r25, Z
  ce:	91 60       	ori	r25, 0x01	; 1
  d0:	90 83       	st	Z, r25
  d2:	90 81       	ld	r25, Z
  d4:	9d 7f       	andi	r25, 0xFD	; 253
  d6:	90 83       	st	Z, r25
  d8:	90 81       	ld	r25, Z
  da:	94 60       	ori	r25, 0x04	; 4
  dc:	90 83       	st	Z, r25
  de:	90 e1       	ldi	r25, 0x10	; 16
  e0:	9a 95       	dec	r25
  e2:	f1 f7       	brne	.-4      	; 0xe0 <Lcd_Data+0x18>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <Lcd_Data+0x1e>
  e6:	8b bb       	out	0x1b, r24	; 27
  e8:	80 e1       	ldi	r24, 0x10	; 16
  ea:	8a 95       	dec	r24
  ec:	f1 f7       	brne	.-4      	; 0xea <Lcd_Data+0x22>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <Lcd_Data+0x28>
  f0:	80 81       	ld	r24, Z
  f2:	8b 7f       	andi	r24, 0xFB	; 251
  f4:	80 83       	st	Z, r24
  f6:	08 95       	ret

000000f8 <Lcd_Cmd>:
  f8:	e5 e6       	ldi	r30, 0x65	; 101
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	90 81       	ld	r25, Z
  fe:	9e 7f       	andi	r25, 0xFE	; 254
 100:	90 83       	st	Z, r25
 102:	90 81       	ld	r25, Z
 104:	9d 7f       	andi	r25, 0xFD	; 253
 106:	90 83       	st	Z, r25
 108:	90 81       	ld	r25, Z
 10a:	94 60       	ori	r25, 0x04	; 4
 10c:	90 83       	st	Z, r25
 10e:	90 e1       	ldi	r25, 0x10	; 16
 110:	9a 95       	dec	r25
 112:	f1 f7       	brne	.-4      	; 0x110 <Lcd_Cmd+0x18>
 114:	00 c0       	rjmp	.+0      	; 0x116 <Lcd_Cmd+0x1e>
 116:	8b bb       	out	0x1b, r24	; 27
 118:	80 e1       	ldi	r24, 0x10	; 16
 11a:	8a 95       	dec	r24
 11c:	f1 f7       	brne	.-4      	; 0x11a <Lcd_Cmd+0x22>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <Lcd_Cmd+0x28>
 120:	80 81       	ld	r24, Z
 122:	8b 7f       	andi	r24, 0xFB	; 251
 124:	80 83       	st	Z, r24
 126:	08 95       	ret

00000128 <Lcd_CHAR>:
 128:	cf df       	rcall	.-98     	; 0xc8 <Lcd_Data>
 12a:	89 ef       	ldi	r24, 0xF9	; 249
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <Lcd_CHAR+0x6>
 132:	00 c0       	rjmp	.+0      	; 0x134 <Lcd_CHAR+0xc>
 134:	00 00       	nop
 136:	08 95       	ret

00000138 <Lcd_STR>:
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
 13c:	ec 01       	movw	r28, r24
 13e:	02 c0       	rjmp	.+4      	; 0x144 <Lcd_STR+0xc>
 140:	f3 df       	rcall	.-26     	; 0x128 <Lcd_CHAR>
 142:	21 96       	adiw	r28, 0x01	; 1
 144:	88 81       	ld	r24, Y
 146:	81 11       	cpse	r24, r1
 148:	fb cf       	rjmp	.-10     	; 0x140 <Lcd_STR+0x8>
 14a:	df 91       	pop	r29
 14c:	cf 91       	pop	r28
 14e:	08 95       	ret

00000150 <Lcd_Pos>:
 150:	90 e4       	ldi	r25, 0x40	; 64
 152:	89 9f       	mul	r24, r25
 154:	60 0d       	add	r22, r0
 156:	11 24       	eor	r1, r1
 158:	86 2f       	mov	r24, r22
 15a:	80 68       	ori	r24, 0x80	; 128
 15c:	cd df       	rcall	.-102    	; 0xf8 <Lcd_Cmd>
 15e:	81 ee       	ldi	r24, 0xE1	; 225
 160:	94 e0       	ldi	r25, 0x04	; 4
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <Lcd_Pos+0x12>
 166:	00 c0       	rjmp	.+0      	; 0x168 <Lcd_Pos+0x18>
 168:	00 00       	nop
 16a:	08 95       	ret

0000016c <Lcd_Clear>:
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	c4 df       	rcall	.-120    	; 0xf8 <Lcd_Cmd>
 170:	83 ef       	ldi	r24, 0xF3	; 243
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	f1 f7       	brne	.-4      	; 0x174 <Lcd_Clear+0x8>
 178:	00 c0       	rjmp	.+0      	; 0x17a <Lcd_Clear+0xe>
 17a:	00 00       	nop
 17c:	08 95       	ret

0000017e <Lcd_Init>:
	}
}

void Lcd_Init(void)
{
	Lcd_Cmd(0x38);
 17e:	88 e3       	ldi	r24, 0x38	; 56
 180:	bb df       	rcall	.-138    	; 0xf8 <Lcd_Cmd>
 182:	83 ef       	ldi	r24, 0xF3	; 243
 184:	91 e0       	ldi	r25, 0x01	; 1
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <Lcd_Init+0x8>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <Lcd_Init+0xe>
 18c:	00 00       	nop
	_delay_ms(2);	//명령어를 IR에 쓰고나면 40us 또는 1.64ms을 기다림.
	Lcd_Cmd(0x38);
 18e:	88 e3       	ldi	r24, 0x38	; 56
 190:	b3 df       	rcall	.-154    	; 0xf8 <Lcd_Cmd>
 192:	83 ef       	ldi	r24, 0xF3	; 243
 194:	91 e0       	ldi	r25, 0x01	; 1
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <Lcd_Init+0x18>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <Lcd_Init+0x1e>
	_delay_ms(2);
	Lcd_Cmd(0x38);
 19c:	00 00       	nop
 19e:	88 e3       	ldi	r24, 0x38	; 56
 1a0:	ab df       	rcall	.-170    	; 0xf8 <Lcd_Cmd>
 1a2:	83 ef       	ldi	r24, 0xF3	; 243
 1a4:	91 e0       	ldi	r25, 0x01	; 1
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <Lcd_Init+0x28>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <Lcd_Init+0x2e>
	_delay_ms(2);
	Lcd_Cmd(0x0c);
 1ac:	00 00       	nop
 1ae:	8c e0       	ldi	r24, 0x0C	; 12
 1b0:	a3 df       	rcall	.-186    	; 0xf8 <Lcd_Cmd>
 1b2:	83 ef       	ldi	r24, 0xF3	; 243
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <Lcd_Init+0x38>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <Lcd_Init+0x3e>
	_delay_ms(2);
	Lcd_Cmd(0x06);
 1bc:	00 00       	nop
 1be:	86 e0       	ldi	r24, 0x06	; 6
 1c0:	9b df       	rcall	.-202    	; 0xf8 <Lcd_Cmd>
 1c2:	83 ef       	ldi	r24, 0xF3	; 243
 1c4:	91 e0       	ldi	r25, 0x01	; 1
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <Lcd_Init+0x48>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <Lcd_Init+0x4e>
	_delay_ms(2);
	Lcd_Clear();
 1cc:	00 00       	nop
 1ce:	ce cf       	rjmp	.-100    	; 0x16c <Lcd_Clear>
 1d0:	08 95       	ret

000001d2 <__vector_8>:
		_delay_ms(1000);
		Lcd_Pos(1,1);
		Lcd_STR(pw);
		_delay_ms(1000);
	
}
 1d2:	1f 92       	push	r1
 1d4:	0f 92       	push	r0
 1d6:	0f b6       	in	r0, 0x3f	; 63
 1d8:	0f 92       	push	r0
 1da:	11 24       	eor	r1, r1
 1dc:	8f 93       	push	r24
 1de:	9f 93       	push	r25
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	90 91 56 01 	lds	r25, 0x0156	; 0x800156 <__data_end>
 1e6:	91 11       	cpse	r25, r1
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <__data_end>
 1ee:	9f 91       	pop	r25
 1f0:	8f 91       	pop	r24
 1f2:	0f 90       	pop	r0
 1f4:	0f be       	out	0x3f, r0	; 63
 1f6:	0f 90       	pop	r0
 1f8:	1f 90       	pop	r1
 1fa:	18 95       	reti

000001fc <putch>:
 1fc:	5d 9b       	sbis	0x0b, 5	; 11
 1fe:	fe cf       	rjmp	.-4      	; 0x1fc <putch>
 200:	8c b9       	out	0x0c, r24	; 12
 202:	8b b1       	in	r24, 0x0b	; 11
 204:	80 62       	ori	r24, 0x20	; 32
 206:	8b b9       	out	0x0b, r24	; 11
 208:	08 95       	ret

0000020a <putstr>:
 20a:	0f 93       	push	r16
 20c:	1f 93       	push	r17
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	8c 01       	movw	r16, r24
 214:	c0 e0       	ldi	r28, 0x00	; 0
 216:	d0 e0       	ldi	r29, 0x00	; 0
 218:	02 c0       	rjmp	.+4      	; 0x21e <putstr+0x14>
 21a:	21 96       	adiw	r28, 0x01	; 1
 21c:	ef df       	rcall	.-34     	; 0x1fc <putch>
 21e:	f8 01       	movw	r30, r16
 220:	ec 0f       	add	r30, r28
 222:	fd 1f       	adc	r31, r29
 224:	80 81       	ld	r24, Z
 226:	81 11       	cpse	r24, r1
 228:	f8 cf       	rjmp	.-16     	; 0x21a <putstr+0x10>
 22a:	df 91       	pop	r29
 22c:	cf 91       	pop	r28
 22e:	1f 91       	pop	r17
 230:	0f 91       	pop	r16
 232:	08 95       	ret

00000234 <getch>:
 234:	04 c0       	rjmp	.+8      	; 0x23e <getch+0xa>
 236:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <__data_end>
 23a:	88 23       	and	r24, r24
 23c:	39 f0       	breq	.+14     	; 0x24c <getch+0x18>
 23e:	5f 9b       	sbis	0x0b, 7	; 11
 240:	fa cf       	rjmp	.-12     	; 0x236 <getch+0x2>
 242:	8c b1       	in	r24, 0x0c	; 12
 244:	9b b1       	in	r25, 0x0b	; 11
 246:	90 68       	ori	r25, 0x80	; 128
 248:	9b b9       	out	0x0b, r25	; 11
 24a:	08 95       	ret
 24c:	8f ef       	ldi	r24, 0xFF	; 255
 24e:	08 95       	ret

00000250 <keyscan>:
 250:	88 e0       	ldi	r24, 0x08	; 8
 252:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 256:	83 e3       	ldi	r24, 0x33	; 51
 258:	97 e0       	ldi	r25, 0x07	; 7
 25a:	01 97       	sbiw	r24, 0x01	; 1
 25c:	f1 f7       	brne	.-4      	; 0x25a <keyscan+0xa>
 25e:	80 b1       	in	r24, 0x00	; 0
 260:	87 70       	andi	r24, 0x07	; 7
 262:	81 30       	cpi	r24, 0x01	; 1
 264:	09 f4       	brne	.+2      	; 0x268 <keyscan+0x18>
 266:	60 c0       	rjmp	.+192    	; 0x328 <keyscan+0xd8>
 268:	80 b1       	in	r24, 0x00	; 0
 26a:	87 70       	andi	r24, 0x07	; 7
 26c:	82 30       	cpi	r24, 0x02	; 2
 26e:	09 f4       	brne	.+2      	; 0x272 <keyscan+0x22>
 270:	5d c0       	rjmp	.+186    	; 0x32c <keyscan+0xdc>
 272:	80 b1       	in	r24, 0x00	; 0
 274:	87 70       	andi	r24, 0x07	; 7
 276:	84 30       	cpi	r24, 0x04	; 4
 278:	09 f4       	brne	.+2      	; 0x27c <keyscan+0x2c>
 27a:	5a c0       	rjmp	.+180    	; 0x330 <keyscan+0xe0>
 27c:	8f ef       	ldi	r24, 0xFF	; 255
 27e:	97 e4       	ldi	r25, 0x47	; 71
 280:	01 97       	sbiw	r24, 0x01	; 1
 282:	f1 f7       	brne	.-4      	; 0x280 <keyscan+0x30>
 284:	00 c0       	rjmp	.+0      	; 0x286 <keyscan+0x36>
 286:	00 00       	nop
 288:	80 e1       	ldi	r24, 0x10	; 16
 28a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 28e:	83 e3       	ldi	r24, 0x33	; 51
 290:	97 e0       	ldi	r25, 0x07	; 7
 292:	01 97       	sbiw	r24, 0x01	; 1
 294:	f1 f7       	brne	.-4      	; 0x292 <keyscan+0x42>
 296:	80 b1       	in	r24, 0x00	; 0
 298:	87 70       	andi	r24, 0x07	; 7
 29a:	81 30       	cpi	r24, 0x01	; 1
 29c:	09 f4       	brne	.+2      	; 0x2a0 <keyscan+0x50>
 29e:	4a c0       	rjmp	.+148    	; 0x334 <keyscan+0xe4>
 2a0:	80 b1       	in	r24, 0x00	; 0
 2a2:	87 70       	andi	r24, 0x07	; 7
 2a4:	82 30       	cpi	r24, 0x02	; 2
 2a6:	09 f4       	brne	.+2      	; 0x2aa <keyscan+0x5a>
 2a8:	47 c0       	rjmp	.+142    	; 0x338 <keyscan+0xe8>
 2aa:	80 b1       	in	r24, 0x00	; 0
 2ac:	87 70       	andi	r24, 0x07	; 7
 2ae:	84 30       	cpi	r24, 0x04	; 4
 2b0:	09 f4       	brne	.+2      	; 0x2b4 <keyscan+0x64>
 2b2:	44 c0       	rjmp	.+136    	; 0x33c <keyscan+0xec>
 2b4:	8f ef       	ldi	r24, 0xFF	; 255
 2b6:	97 e4       	ldi	r25, 0x47	; 71
 2b8:	01 97       	sbiw	r24, 0x01	; 1
 2ba:	f1 f7       	brne	.-4      	; 0x2b8 <keyscan+0x68>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <keyscan+0x6e>
 2be:	00 00       	nop
 2c0:	80 e2       	ldi	r24, 0x20	; 32
 2c2:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 2c6:	83 e3       	ldi	r24, 0x33	; 51
 2c8:	97 e0       	ldi	r25, 0x07	; 7
 2ca:	01 97       	sbiw	r24, 0x01	; 1
 2cc:	f1 f7       	brne	.-4      	; 0x2ca <keyscan+0x7a>
 2ce:	80 b1       	in	r24, 0x00	; 0
 2d0:	87 70       	andi	r24, 0x07	; 7
 2d2:	81 30       	cpi	r24, 0x01	; 1
 2d4:	a9 f1       	breq	.+106    	; 0x340 <keyscan+0xf0>
 2d6:	80 b1       	in	r24, 0x00	; 0
 2d8:	87 70       	andi	r24, 0x07	; 7
 2da:	82 30       	cpi	r24, 0x02	; 2
 2dc:	99 f1       	breq	.+102    	; 0x344 <keyscan+0xf4>
 2de:	80 b1       	in	r24, 0x00	; 0
 2e0:	87 70       	andi	r24, 0x07	; 7
 2e2:	84 30       	cpi	r24, 0x04	; 4
 2e4:	89 f1       	breq	.+98     	; 0x348 <keyscan+0xf8>
 2e6:	8f ef       	ldi	r24, 0xFF	; 255
 2e8:	97 e4       	ldi	r25, 0x47	; 71
 2ea:	01 97       	sbiw	r24, 0x01	; 1
 2ec:	f1 f7       	brne	.-4      	; 0x2ea <keyscan+0x9a>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <keyscan+0xa0>
 2f0:	00 00       	nop
 2f2:	80 e4       	ldi	r24, 0x40	; 64
 2f4:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 2f8:	83 e3       	ldi	r24, 0x33	; 51
 2fa:	97 e0       	ldi	r25, 0x07	; 7
 2fc:	01 97       	sbiw	r24, 0x01	; 1
 2fe:	f1 f7       	brne	.-4      	; 0x2fc <keyscan+0xac>
 300:	80 b1       	in	r24, 0x00	; 0
 302:	87 70       	andi	r24, 0x07	; 7
 304:	81 30       	cpi	r24, 0x01	; 1
 306:	11 f1       	breq	.+68     	; 0x34c <keyscan+0xfc>
 308:	80 b1       	in	r24, 0x00	; 0
 30a:	87 70       	andi	r24, 0x07	; 7
 30c:	82 30       	cpi	r24, 0x02	; 2
 30e:	01 f1       	breq	.+64     	; 0x350 <keyscan+0x100>
 310:	80 b1       	in	r24, 0x00	; 0
 312:	87 70       	andi	r24, 0x07	; 7
 314:	84 30       	cpi	r24, 0x04	; 4
 316:	f1 f0       	breq	.+60     	; 0x354 <keyscan+0x104>
 318:	8f ef       	ldi	r24, 0xFF	; 255
 31a:	97 e4       	ldi	r25, 0x47	; 71
 31c:	01 97       	sbiw	r24, 0x01	; 1
 31e:	f1 f7       	brne	.-4      	; 0x31c <keyscan+0xcc>
 320:	00 c0       	rjmp	.+0      	; 0x322 <keyscan+0xd2>
 322:	00 00       	nop
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	08 95       	ret
 328:	81 e3       	ldi	r24, 0x31	; 49
 32a:	08 95       	ret
 32c:	82 e3       	ldi	r24, 0x32	; 50
 32e:	08 95       	ret
 330:	83 e3       	ldi	r24, 0x33	; 51
 332:	08 95       	ret
 334:	84 e3       	ldi	r24, 0x34	; 52
 336:	08 95       	ret
 338:	85 e3       	ldi	r24, 0x35	; 53
 33a:	08 95       	ret
 33c:	86 e3       	ldi	r24, 0x36	; 54
 33e:	08 95       	ret
 340:	87 e3       	ldi	r24, 0x37	; 55
 342:	08 95       	ret
 344:	88 e3       	ldi	r24, 0x38	; 56
 346:	08 95       	ret
 348:	89 e3       	ldi	r24, 0x39	; 57
 34a:	08 95       	ret
 34c:	8a e2       	ldi	r24, 0x2A	; 42
 34e:	08 95       	ret
 350:	80 e3       	ldi	r24, 0x30	; 48
 352:	08 95       	ret
 354:	83 e2       	ldi	r24, 0x23	; 35
 356:	08 95       	ret

00000358 <btn_check>:
 358:	60 e1       	ldi	r22, 0x10	; 16
 35a:	71 e0       	ldi	r23, 0x01	; 1
 35c:	58 d2       	rcall	.+1200   	; 0x80e <strcmp>
 35e:	89 2b       	or	r24, r25
 360:	11 f4       	brne	.+4      	; 0x366 <btn_check+0xe>
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	08 95       	ret
 366:	80 e0       	ldi	r24, 0x00	; 0
 368:	08 95       	ret

0000036a <Open_Door>:
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	21 c0       	rjmp	.+66     	; 0x3b2 <Open_Door+0x48>
 370:	20 e1       	ldi	r18, 0x10	; 16
 372:	25 bb       	out	0x15, r18	; 21
 374:	ef ef       	ldi	r30, 0xFF	; 255
 376:	f7 e4       	ldi	r31, 0x47	; 71
 378:	31 97       	sbiw	r30, 0x01	; 1
 37a:	f1 f7       	brne	.-4      	; 0x378 <Open_Door+0xe>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <Open_Door+0x14>
 37e:	00 00       	nop
 380:	20 e2       	ldi	r18, 0x20	; 32
 382:	25 bb       	out	0x15, r18	; 21
 384:	ef ef       	ldi	r30, 0xFF	; 255
 386:	f7 e4       	ldi	r31, 0x47	; 71
 388:	31 97       	sbiw	r30, 0x01	; 1
 38a:	f1 f7       	brne	.-4      	; 0x388 <Open_Door+0x1e>
 38c:	00 c0       	rjmp	.+0      	; 0x38e <Open_Door+0x24>
 38e:	00 00       	nop
 390:	20 e4       	ldi	r18, 0x40	; 64
 392:	25 bb       	out	0x15, r18	; 21
 394:	ef ef       	ldi	r30, 0xFF	; 255
 396:	f7 e4       	ldi	r31, 0x47	; 71
 398:	31 97       	sbiw	r30, 0x01	; 1
 39a:	f1 f7       	brne	.-4      	; 0x398 <Open_Door+0x2e>
 39c:	00 c0       	rjmp	.+0      	; 0x39e <Open_Door+0x34>
 39e:	00 00       	nop
 3a0:	20 e8       	ldi	r18, 0x80	; 128
 3a2:	25 bb       	out	0x15, r18	; 21
 3a4:	ef ef       	ldi	r30, 0xFF	; 255
 3a6:	f7 e4       	ldi	r31, 0x47	; 71
 3a8:	31 97       	sbiw	r30, 0x01	; 1
 3aa:	f1 f7       	brne	.-4      	; 0x3a8 <Open_Door+0x3e>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <Open_Door+0x44>
 3ae:	00 00       	nop
 3b0:	01 96       	adiw	r24, 0x01	; 1
 3b2:	82 33       	cpi	r24, 0x32	; 50
 3b4:	91 05       	cpc	r25, r1
 3b6:	e4 f2       	brlt	.-72     	; 0x370 <Open_Door+0x6>
 3b8:	ff ef       	ldi	r31, 0xFF	; 255
 3ba:	2f e7       	ldi	r18, 0x7F	; 127
 3bc:	84 e0       	ldi	r24, 0x04	; 4
 3be:	f1 50       	subi	r31, 0x01	; 1
 3c0:	20 40       	sbci	r18, 0x00	; 0
 3c2:	80 40       	sbci	r24, 0x00	; 0
 3c4:	e1 f7       	brne	.-8      	; 0x3be <Open_Door+0x54>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <Open_Door+0x5e>
 3c8:	00 00       	nop
 3ca:	08 95       	ret

000003cc <Buzzer>:
 3cc:	0f 93       	push	r16
 3ce:	1f 93       	push	r17
 3d0:	cf 93       	push	r28
 3d2:	df 93       	push	r29
 3d4:	81 30       	cpi	r24, 0x01	; 1
 3d6:	a9 f5       	brne	.+106    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 3d8:	2e c0       	rjmp	.+92     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 3da:	fe 01       	movw	r30, r28
 3dc:	ee 0f       	add	r30, r30
 3de:	ff 1f       	adc	r31, r31
 3e0:	e0 50       	subi	r30, 0x00	; 0
 3e2:	ff 4f       	sbci	r31, 0xFF	; 255
 3e4:	20 81       	ld	r18, Z
 3e6:	31 81       	ldd	r19, Z+1	; 0x01
 3e8:	40 e0       	ldi	r20, 0x00	; 0
 3ea:	50 e0       	ldi	r21, 0x00	; 0
 3ec:	60 e0       	ldi	r22, 0x00	; 0
 3ee:	70 e8       	ldi	r23, 0x80	; 128
 3f0:	80 e7       	ldi	r24, 0x70	; 112
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	ea d1       	rcall	.+980    	; 0x7ca <__udivmodsi4>
 3f6:	37 bd       	out	0x27, r19	; 39
 3f8:	26 bd       	out	0x26, r18	; 38
 3fa:	86 b5       	in	r24, 0x26	; 38
 3fc:	97 b5       	in	r25, 0x27	; 39
 3fe:	96 95       	lsr	r25
 400:	87 95       	ror	r24
 402:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 406:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 40a:	8f b5       	in	r24, 0x2f	; 47
 40c:	84 60       	ori	r24, 0x04	; 4
 40e:	8f bd       	out	0x2f, r24	; 47
 410:	2f ef       	ldi	r18, 0xFF	; 255
 412:	8f e3       	ldi	r24, 0x3F	; 63
 414:	92 e0       	ldi	r25, 0x02	; 2
 416:	21 50       	subi	r18, 0x01	; 1
 418:	80 40       	sbci	r24, 0x00	; 0
 41a:	90 40       	sbci	r25, 0x00	; 0
 41c:	e1 f7       	brne	.-8      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 41e:	00 c0       	rjmp	.+0      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 420:	00 00       	nop
 422:	21 96       	adiw	r28, 0x01	; 1
 424:	02 c0       	rjmp	.+4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 426:	c0 e0       	ldi	r28, 0x00	; 0
 428:	d0 e0       	ldi	r29, 0x00	; 0
 42a:	c3 30       	cpi	r28, 0x03	; 3
 42c:	d1 05       	cpc	r29, r1
 42e:	ac f2       	brlt	.-86     	; 0x3da <Buzzer+0xe>
 430:	0f 5f       	subi	r16, 0xFF	; 255
 432:	1f 4f       	sbci	r17, 0xFF	; 255
 434:	02 c0       	rjmp	.+4      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 436:	00 e0       	ldi	r16, 0x00	; 0
 438:	10 e0       	ldi	r17, 0x00	; 0
 43a:	03 30       	cpi	r16, 0x03	; 3
 43c:	11 05       	cpc	r17, r1
 43e:	9c f3       	brlt	.-26     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 440:	21 c0       	rjmp	.+66     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 442:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__DATA_REGION_ORIGIN__+0xe>
 446:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__DATA_REGION_ORIGIN__+0xf>
 44a:	40 e0       	ldi	r20, 0x00	; 0
 44c:	50 e0       	ldi	r21, 0x00	; 0
 44e:	60 e0       	ldi	r22, 0x00	; 0
 450:	70 e8       	ldi	r23, 0x80	; 128
 452:	80 e7       	ldi	r24, 0x70	; 112
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	b9 d1       	rcall	.+882    	; 0x7ca <__udivmodsi4>
 458:	37 bd       	out	0x27, r19	; 39
 45a:	26 bd       	out	0x26, r18	; 38
 45c:	86 b5       	in	r24, 0x26	; 38
 45e:	97 b5       	in	r25, 0x27	; 39
 460:	96 95       	lsr	r25
 462:	87 95       	ror	r24
 464:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 468:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 46c:	8f b5       	in	r24, 0x2f	; 47
 46e:	84 60       	ori	r24, 0x04	; 4
 470:	8f bd       	out	0x2f, r24	; 47
 472:	2f ef       	ldi	r18, 0xFF	; 255
 474:	8f e7       	ldi	r24, 0x7F	; 127
 476:	93 e4       	ldi	r25, 0x43	; 67
 478:	21 50       	subi	r18, 0x01	; 1
 47a:	80 40       	sbci	r24, 0x00	; 0
 47c:	90 40       	sbci	r25, 0x00	; 0
 47e:	e1 f7       	brne	.-8      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 480:	00 c0       	rjmp	.+0      	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 482:	00 00       	nop
 484:	1f bc       	out	0x2f, r1	; 47
 486:	df 91       	pop	r29
 488:	cf 91       	pop	r28
 48a:	1f 91       	pop	r17
 48c:	0f 91       	pop	r16
 48e:	08 95       	ret

00000490 <Intr>:
 490:	df 92       	push	r13
 492:	ef 92       	push	r14
 494:	ff 92       	push	r15
 496:	0f 93       	push	r16
 498:	1f 93       	push	r17
 49a:	cf 93       	push	r28
 49c:	df 93       	push	r29
 49e:	cd b7       	in	r28, 0x3d	; 61
 4a0:	de b7       	in	r29, 0x3e	; 62
 4a2:	64 97       	sbiw	r28, 0x14	; 20
 4a4:	0f b6       	in	r0, 0x3f	; 63
 4a6:	f8 94       	cli
 4a8:	de bf       	out	0x3e, r29	; 62
 4aa:	0f be       	out	0x3f, r0	; 63
 4ac:	cd bf       	out	0x3d, r28	; 61
 4ae:	fe 01       	movw	r30, r28
 4b0:	36 96       	adiw	r30, 0x06	; 6
 4b2:	8f e0       	ldi	r24, 0x0F	; 15
 4b4:	df 01       	movw	r26, r30
 4b6:	1d 92       	st	X+, r1
 4b8:	8a 95       	dec	r24
 4ba:	e9 f7       	brne	.-6      	; 0x4b6 <Intr+0x26>
 4bc:	80 e0       	ldi	r24, 0x00	; 0
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	0f c0       	rjmp	.+30     	; 0x4e0 <Intr+0x50>
 4c2:	e6 e0       	ldi	r30, 0x06	; 6
 4c4:	f0 e0       	ldi	r31, 0x00	; 0
 4c6:	ec 0f       	add	r30, r28
 4c8:	fd 1f       	adc	r31, r29
 4ca:	e8 0f       	add	r30, r24
 4cc:	f9 1f       	adc	r31, r25
 4ce:	10 82       	st	Z, r1
 4d0:	e1 e0       	ldi	r30, 0x01	; 1
 4d2:	f0 e0       	ldi	r31, 0x00	; 0
 4d4:	ec 0f       	add	r30, r28
 4d6:	fd 1f       	adc	r31, r29
 4d8:	e8 0f       	add	r30, r24
 4da:	f9 1f       	adc	r31, r25
 4dc:	10 82       	st	Z, r1
 4de:	01 96       	adiw	r24, 0x01	; 1
 4e0:	85 30       	cpi	r24, 0x05	; 5
 4e2:	91 05       	cpc	r25, r1
 4e4:	74 f3       	brlt	.-36     	; 0x4c2 <Intr+0x32>
 4e6:	e1 2c       	mov	r14, r1
 4e8:	f1 2c       	mov	r15, r1
 4ea:	00 e0       	ldi	r16, 0x00	; 0
 4ec:	d1 2c       	mov	r13, r1
 4ee:	2b c0       	rjmp	.+86     	; 0x546 <Intr+0xb6>
 4f0:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <__data_end>
 4f4:	81 11       	cpse	r24, r1
 4f6:	2b c0       	rjmp	.+86     	; 0x54e <Intr+0xbe>
 4f8:	60 e0       	ldi	r22, 0x00	; 0
 4fa:	2a de       	rcall	.-940    	; 0x150 <Lcd_Pos>
 4fc:	85 e1       	ldi	r24, 0x15	; 21
 4fe:	91 e0       	ldi	r25, 0x01	; 1
 500:	1b de       	rcall	.-970    	; 0x138 <Lcd_STR>
 502:	a6 de       	rcall	.-692    	; 0x250 <keyscan>
 504:	18 2f       	mov	r17, r24
 506:	08 17       	cp	r16, r24
 508:	11 f0       	breq	.+4      	; 0x50e <Intr+0x7e>
 50a:	81 11       	cpse	r24, r1
 50c:	d8 2e       	mov	r13, r24
 50e:	dd 20       	and	r13, r13
 510:	c9 f0       	breq	.+50     	; 0x544 <Intr+0xb4>
 512:	e1 e0       	ldi	r30, 0x01	; 1
 514:	f0 e0       	ldi	r31, 0x00	; 0
 516:	ec 0f       	add	r30, r28
 518:	fd 1f       	adc	r31, r29
 51a:	ee 0d       	add	r30, r14
 51c:	ff 1d       	adc	r31, r15
 51e:	d0 82       	st	Z, r13
 520:	e6 e0       	ldi	r30, 0x06	; 6
 522:	f0 e0       	ldi	r31, 0x00	; 0
 524:	ec 0f       	add	r30, r28
 526:	fd 1f       	adc	r31, r29
 528:	ee 0d       	add	r30, r14
 52a:	ff 1d       	adc	r31, r15
 52c:	8a e2       	ldi	r24, 0x2A	; 42
 52e:	80 83       	st	Z, r24
 530:	61 e0       	ldi	r22, 0x01	; 1
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	0d de       	rcall	.-998    	; 0x150 <Lcd_Pos>
 536:	ce 01       	movw	r24, r28
 538:	06 96       	adiw	r24, 0x06	; 6
 53a:	fe dd       	rcall	.-1028   	; 0x138 <Lcd_STR>
 53c:	bf ef       	ldi	r27, 0xFF	; 255
 53e:	eb 1a       	sub	r14, r27
 540:	fb 0a       	sbc	r15, r27
 542:	d1 2c       	mov	r13, r1
 544:	01 2f       	mov	r16, r17
 546:	24 e0       	ldi	r18, 0x04	; 4
 548:	e2 16       	cp	r14, r18
 54a:	f1 04       	cpc	r15, r1
 54c:	8c f2       	brlt	.-94     	; 0x4f0 <Intr+0x60>
 54e:	84 e0       	ldi	r24, 0x04	; 4
 550:	e8 16       	cp	r14, r24
 552:	f1 04       	cpc	r15, r1
 554:	09 f0       	breq	.+2      	; 0x558 <Intr+0xc8>
 556:	3d c0       	rjmp	.+122    	; 0x5d2 <Intr+0x142>
 558:	ce 01       	movw	r24, r28
 55a:	01 96       	adiw	r24, 0x01	; 1
 55c:	fd de       	rcall	.-518    	; 0x358 <btn_check>
 55e:	81 30       	cpi	r24, 0x01	; 1
 560:	c9 f4       	brne	.+50     	; 0x594 <Intr+0x104>
 562:	04 de       	rcall	.-1016   	; 0x16c <Lcd_Clear>
 564:	af ef       	ldi	r26, 0xFF	; 255
 566:	bb e6       	ldi	r27, 0x6B	; 107
 568:	11 97       	sbiw	r26, 0x01	; 1
 56a:	f1 f7       	brne	.-4      	; 0x568 <Intr+0xd8>
 56c:	00 c0       	rjmp	.+0      	; 0x56e <Intr+0xde>
 56e:	00 00       	nop
 570:	60 e0       	ldi	r22, 0x00	; 0
 572:	81 e0       	ldi	r24, 0x01	; 1
 574:	ed dd       	rcall	.-1062   	; 0x150 <Lcd_Pos>
 576:	85 e4       	ldi	r24, 0x45	; 69
 578:	91 e0       	ldi	r25, 0x01	; 1
 57a:	de dd       	rcall	.-1092   	; 0x138 <Lcd_STR>
 57c:	b9 e9       	ldi	r27, 0x99	; 153
 57e:	29 eb       	ldi	r18, 0xB9	; 185
 580:	86 e1       	ldi	r24, 0x16	; 22
 582:	b1 50       	subi	r27, 0x01	; 1
 584:	20 40       	sbci	r18, 0x00	; 0
 586:	80 40       	sbci	r24, 0x00	; 0
 588:	e1 f7       	brne	.-8      	; 0x582 <Intr+0xf2>
 58a:	00 00       	nop
 58c:	81 e0       	ldi	r24, 0x01	; 1
 58e:	1e df       	rcall	.-452    	; 0x3cc <Buzzer>
 590:	ec de       	rcall	.-552    	; 0x36a <Open_Door>
 592:	18 c0       	rjmp	.+48     	; 0x5c4 <Intr+0x134>
 594:	eb dd       	rcall	.-1066   	; 0x16c <Lcd_Clear>
 596:	af ef       	ldi	r26, 0xFF	; 255
 598:	bb e6       	ldi	r27, 0x6B	; 107
 59a:	11 97       	sbiw	r26, 0x01	; 1
 59c:	f1 f7       	brne	.-4      	; 0x59a <Intr+0x10a>
 59e:	00 c0       	rjmp	.+0      	; 0x5a0 <Intr+0x110>
 5a0:	00 00       	nop
 5a2:	60 e0       	ldi	r22, 0x00	; 0
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	d4 dd       	rcall	.-1112   	; 0x150 <Lcd_Pos>
 5a8:	8c e4       	ldi	r24, 0x4C	; 76
 5aa:	91 e0       	ldi	r25, 0x01	; 1
 5ac:	c5 dd       	rcall	.-1142   	; 0x138 <Lcd_STR>
 5ae:	bf ef       	ldi	r27, 0xFF	; 255
 5b0:	2f e7       	ldi	r18, 0x7F	; 127
 5b2:	86 e1       	ldi	r24, 0x16	; 22
 5b4:	b1 50       	subi	r27, 0x01	; 1
 5b6:	20 40       	sbci	r18, 0x00	; 0
 5b8:	80 40       	sbci	r24, 0x00	; 0
 5ba:	e1 f7       	brne	.-8      	; 0x5b4 <Intr+0x124>
 5bc:	00 c0       	rjmp	.+0      	; 0x5be <Intr+0x12e>
 5be:	00 00       	nop
 5c0:	80 e0       	ldi	r24, 0x00	; 0
 5c2:	04 df       	rcall	.-504    	; 0x3cc <Buzzer>
 5c4:	d3 dd       	rcall	.-1114   	; 0x16c <Lcd_Clear>
 5c6:	af ef       	ldi	r26, 0xFF	; 255
 5c8:	b7 e4       	ldi	r27, 0x47	; 71
 5ca:	11 97       	sbiw	r26, 0x01	; 1
 5cc:	f1 f7       	brne	.-4      	; 0x5ca <Intr+0x13a>
 5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <Intr+0x140>
 5d0:	00 00       	nop
 5d2:	64 96       	adiw	r28, 0x14	; 20
 5d4:	0f b6       	in	r0, 0x3f	; 63
 5d6:	f8 94       	cli
 5d8:	de bf       	out	0x3e, r29	; 62
 5da:	0f be       	out	0x3f, r0	; 63
 5dc:	cd bf       	out	0x3d, r28	; 61
 5de:	df 91       	pop	r29
 5e0:	cf 91       	pop	r28
 5e2:	1f 91       	pop	r17
 5e4:	0f 91       	pop	r16
 5e6:	ff 90       	pop	r15
 5e8:	ef 90       	pop	r14
 5ea:	df 90       	pop	r13
 5ec:	08 95       	ret

000005ee <Urt>:
 5ee:	0f 93       	push	r16
 5f0:	1f 93       	push	r17
 5f2:	cf 93       	push	r28
 5f4:	df 93       	push	r29
 5f6:	cd b7       	in	r28, 0x3d	; 61
 5f8:	de b7       	in	r29, 0x3e	; 62
 5fa:	64 97       	sbiw	r28, 0x14	; 20
 5fc:	0f b6       	in	r0, 0x3f	; 63
 5fe:	f8 94       	cli
 600:	de bf       	out	0x3e, r29	; 62
 602:	0f be       	out	0x3f, r0	; 63
 604:	cd bf       	out	0x3d, r28	; 61
 606:	fe 01       	movw	r30, r28
 608:	36 96       	adiw	r30, 0x06	; 6
 60a:	8f e0       	ldi	r24, 0x0F	; 15
 60c:	df 01       	movw	r26, r30
 60e:	1d 92       	st	X+, r1
 610:	8a 95       	dec	r24
 612:	e9 f7       	brne	.-6      	; 0x60e <Urt+0x20>
 614:	80 e0       	ldi	r24, 0x00	; 0
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	0f c0       	rjmp	.+30     	; 0x638 <Urt+0x4a>
 61a:	e6 e0       	ldi	r30, 0x06	; 6
 61c:	f0 e0       	ldi	r31, 0x00	; 0
 61e:	ec 0f       	add	r30, r28
 620:	fd 1f       	adc	r31, r29
 622:	e8 0f       	add	r30, r24
 624:	f9 1f       	adc	r31, r25
 626:	10 82       	st	Z, r1
 628:	e1 e0       	ldi	r30, 0x01	; 1
 62a:	f0 e0       	ldi	r31, 0x00	; 0
 62c:	ec 0f       	add	r30, r28
 62e:	fd 1f       	adc	r31, r29
 630:	e8 0f       	add	r30, r24
 632:	f9 1f       	adc	r31, r25
 634:	10 82       	st	Z, r1
 636:	01 96       	adiw	r24, 0x01	; 1
 638:	85 30       	cpi	r24, 0x05	; 5
 63a:	91 05       	cpc	r25, r1
 63c:	74 f3       	brlt	.-36     	; 0x61a <Urt+0x2c>
 63e:	82 e2       	ldi	r24, 0x22	; 34
 640:	91 e0       	ldi	r25, 0x01	; 1
 642:	e3 dd       	rcall	.-1082   	; 0x20a <putstr>
 644:	00 e0       	ldi	r16, 0x00	; 0
 646:	10 e0       	ldi	r17, 0x00	; 0
 648:	26 c0       	rjmp	.+76     	; 0x696 <Urt+0xa8>
 64a:	60 e0       	ldi	r22, 0x00	; 0
 64c:	80 e0       	ldi	r24, 0x00	; 0
 64e:	80 dd       	rcall	.-1280   	; 0x150 <Lcd_Pos>
 650:	85 e3       	ldi	r24, 0x35	; 53
 652:	91 e0       	ldi	r25, 0x01	; 1
 654:	71 dd       	rcall	.-1310   	; 0x138 <Lcd_STR>
 656:	ee dd       	rcall	.-1060   	; 0x234 <getch>
 658:	90 91 56 01 	lds	r25, 0x0156	; 0x800156 <__data_end>
 65c:	99 23       	and	r25, r25
 65e:	f1 f0       	breq	.+60     	; 0x69c <Urt+0xae>
 660:	88 23       	and	r24, r24
 662:	c9 f0       	breq	.+50     	; 0x696 <Urt+0xa8>
 664:	e1 e0       	ldi	r30, 0x01	; 1
 666:	f0 e0       	ldi	r31, 0x00	; 0
 668:	ec 0f       	add	r30, r28
 66a:	fd 1f       	adc	r31, r29
 66c:	e0 0f       	add	r30, r16
 66e:	f1 1f       	adc	r31, r17
 670:	80 83       	st	Z, r24
 672:	e6 e0       	ldi	r30, 0x06	; 6
 674:	f0 e0       	ldi	r31, 0x00	; 0
 676:	ec 0f       	add	r30, r28
 678:	fd 1f       	adc	r31, r29
 67a:	e0 0f       	add	r30, r16
 67c:	f1 1f       	adc	r31, r17
 67e:	8a e2       	ldi	r24, 0x2A	; 42
 680:	80 83       	st	Z, r24
 682:	61 e0       	ldi	r22, 0x01	; 1
 684:	81 e0       	ldi	r24, 0x01	; 1
 686:	64 dd       	rcall	.-1336   	; 0x150 <Lcd_Pos>
 688:	ce 01       	movw	r24, r28
 68a:	06 96       	adiw	r24, 0x06	; 6
 68c:	55 dd       	rcall	.-1366   	; 0x138 <Lcd_STR>
 68e:	8a e2       	ldi	r24, 0x2A	; 42
 690:	b5 dd       	rcall	.-1174   	; 0x1fc <putch>
 692:	0f 5f       	subi	r16, 0xFF	; 255
 694:	1f 4f       	sbci	r17, 0xFF	; 255
 696:	04 30       	cpi	r16, 0x04	; 4
 698:	11 05       	cpc	r17, r1
 69a:	bc f2       	brlt	.-82     	; 0x64a <Urt+0x5c>
 69c:	04 30       	cpi	r16, 0x04	; 4
 69e:	11 05       	cpc	r17, r1
 6a0:	09 f0       	breq	.+2      	; 0x6a4 <Urt+0xb6>
 6a2:	46 c0       	rjmp	.+140    	; 0x730 <Urt+0x142>
 6a4:	ce 01       	movw	r24, r28
 6a6:	01 96       	adiw	r24, 0x01	; 1
 6a8:	57 de       	rcall	.-850    	; 0x358 <btn_check>
 6aa:	81 30       	cpi	r24, 0x01	; 1
 6ac:	e1 f4       	brne	.+56     	; 0x6e6 <Urt+0xf8>
 6ae:	5e dd       	rcall	.-1348   	; 0x16c <Lcd_Clear>
 6b0:	8f ef       	ldi	r24, 0xFF	; 255
 6b2:	9b e6       	ldi	r25, 0x6B	; 107
 6b4:	01 97       	sbiw	r24, 0x01	; 1
 6b6:	f1 f7       	brne	.-4      	; 0x6b4 <Urt+0xc6>
 6b8:	00 c0       	rjmp	.+0      	; 0x6ba <Urt+0xcc>
 6ba:	00 00       	nop
 6bc:	60 e0       	ldi	r22, 0x00	; 0
 6be:	81 e0       	ldi	r24, 0x01	; 1
 6c0:	47 dd       	rcall	.-1394   	; 0x150 <Lcd_Pos>
 6c2:	85 e4       	ldi	r24, 0x45	; 69
 6c4:	91 e0       	ldi	r25, 0x01	; 1
 6c6:	38 dd       	rcall	.-1424   	; 0x138 <Lcd_STR>
 6c8:	83 e4       	ldi	r24, 0x43	; 67
 6ca:	91 e0       	ldi	r25, 0x01	; 1
 6cc:	9e dd       	rcall	.-1220   	; 0x20a <putstr>
 6ce:	99 e9       	ldi	r25, 0x99	; 153
 6d0:	a9 eb       	ldi	r26, 0xB9	; 185
 6d2:	b6 e1       	ldi	r27, 0x16	; 22
 6d4:	91 50       	subi	r25, 0x01	; 1
 6d6:	a0 40       	sbci	r26, 0x00	; 0
 6d8:	b0 40       	sbci	r27, 0x00	; 0
 6da:	e1 f7       	brne	.-8      	; 0x6d4 <Urt+0xe6>
 6dc:	00 00       	nop
 6de:	81 e0       	ldi	r24, 0x01	; 1
 6e0:	75 de       	rcall	.-790    	; 0x3cc <Buzzer>
 6e2:	43 de       	rcall	.-890    	; 0x36a <Open_Door>
 6e4:	1b c0       	rjmp	.+54     	; 0x71c <Urt+0x12e>
 6e6:	42 dd       	rcall	.-1404   	; 0x16c <Lcd_Clear>
 6e8:	8f ef       	ldi	r24, 0xFF	; 255
 6ea:	9b e6       	ldi	r25, 0x6B	; 107
 6ec:	01 97       	sbiw	r24, 0x01	; 1
 6ee:	f1 f7       	brne	.-4      	; 0x6ec <Urt+0xfe>
 6f0:	00 c0       	rjmp	.+0      	; 0x6f2 <Urt+0x104>
 6f2:	00 00       	nop
 6f4:	60 e0       	ldi	r22, 0x00	; 0
 6f6:	81 e0       	ldi	r24, 0x01	; 1
 6f8:	2b dd       	rcall	.-1450   	; 0x150 <Lcd_Pos>
 6fa:	8c e4       	ldi	r24, 0x4C	; 76
 6fc:	91 e0       	ldi	r25, 0x01	; 1
 6fe:	1c dd       	rcall	.-1480   	; 0x138 <Lcd_STR>
 700:	8a e4       	ldi	r24, 0x4A	; 74
 702:	91 e0       	ldi	r25, 0x01	; 1
 704:	82 dd       	rcall	.-1276   	; 0x20a <putstr>
 706:	9f ef       	ldi	r25, 0xFF	; 255
 708:	af e7       	ldi	r26, 0x7F	; 127
 70a:	b6 e1       	ldi	r27, 0x16	; 22
 70c:	91 50       	subi	r25, 0x01	; 1
 70e:	a0 40       	sbci	r26, 0x00	; 0
 710:	b0 40       	sbci	r27, 0x00	; 0
 712:	e1 f7       	brne	.-8      	; 0x70c <Urt+0x11e>
 714:	00 c0       	rjmp	.+0      	; 0x716 <Urt+0x128>
 716:	00 00       	nop
 718:	80 e0       	ldi	r24, 0x00	; 0
 71a:	58 de       	rcall	.-848    	; 0x3cc <Buzzer>
 71c:	27 dd       	rcall	.-1458   	; 0x16c <Lcd_Clear>
 71e:	8f ef       	ldi	r24, 0xFF	; 255
 720:	97 e4       	ldi	r25, 0x47	; 71
 722:	01 97       	sbiw	r24, 0x01	; 1
 724:	f1 f7       	brne	.-4      	; 0x722 <Urt+0x134>
 726:	00 c0       	rjmp	.+0      	; 0x728 <Urt+0x13a>
 728:	00 00       	nop
 72a:	82 e5       	ldi	r24, 0x52	; 82
 72c:	91 e0       	ldi	r25, 0x01	; 1
 72e:	6d dd       	rcall	.-1318   	; 0x20a <putstr>
 730:	64 96       	adiw	r28, 0x14	; 20
 732:	0f b6       	in	r0, 0x3f	; 63
 734:	f8 94       	cli
 736:	de bf       	out	0x3e, r29	; 62
 738:	0f be       	out	0x3f, r0	; 63
 73a:	cd bf       	out	0x3d, r28	; 61
 73c:	df 91       	pop	r29
 73e:	cf 91       	pop	r28
 740:	1f 91       	pop	r17
 742:	0f 91       	pop	r16
 744:	08 95       	ret

00000746 <main>:
	UART :: 키보드를 누르면 통신을 통해 비밀번호 입력, 이후 동작은 동일

	*/
	
	
	DDRF = 0xF8;	//button
 746:	88 ef       	ldi	r24, 0xF8	; 248
 748:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	PORTF = 0x07;	//0b 0000 0111
 74c:	87 e0       	ldi	r24, 0x07	; 7
 74e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
		
	DDRC = 0xff;
 752:	8f ef       	ldi	r24, 0xFF	; 255
 754:	84 bb       	out	0x14, r24	; 20
		
	DDRA = 0xFF;	//LCD
 756:	8a bb       	out	0x1a, r24	; 26
	DDRG = 0xFF;	//LCD 친구
 758:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
		
	DDRB = 0x80;	//PIEZO
 75c:	80 e8       	ldi	r24, 0x80	; 128
 75e:	87 bb       	out	0x17, r24	; 23
	
	DDRE = 0x02;	//UART PE0 : 입력(RXDn), PE1 :전송(TXD0)
 760:	92 e0       	ldi	r25, 0x02	; 2
 762:	92 b9       	out	0x02, r25	; 2
		
	//TCCR1A = 0x00; // WGM1(1:0) = “00”
	TCCR1B |= (1 << WGM13) | (1 << WGM12);// WGM1(3:2) = “11”
 764:	9e b5       	in	r25, 0x2e	; 46
 766:	98 61       	ori	r25, 0x18	; 24
 768:	9e bd       	out	0x2e, r25	; 46
	TCCR1B |= (1 << CS10); // CS1(2:0) = “001” 1분주 사용
 76a:	9e b5       	in	r25, 0x2e	; 46
 76c:	91 60       	ori	r25, 0x01	; 1
 76e:	9e bd       	out	0x2e, r25	; 46
	TCCR1C = 0x00; // WGM1(3:0) = “1100”, CTC, 모드 12
 770:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
		
	TCNT1 = 0x0000;
 774:	1d bc       	out	0x2d, r1	; 45
 776:	1c bc       	out	0x2c, r1	; 44
	
	/*UART*/
	UCSR0A = 0;
 778:	1b b8       	out	0x0b, r1	; 11
	UCSR0B |= 1<<RXEN0 | 1<<TXEN0;	//수신, 송신 활성화
 77a:	9a b1       	in	r25, 0x0a	; 10
 77c:	98 61       	ori	r25, 0x18	; 24
 77e:	9a b9       	out	0x0a, r25	; 10
	UCSR0C |= 1<<UCSZ01 | 1<<UCSZ00;;	//char size 를 8-bit로 설정
 780:	e5 e9       	ldi	r30, 0x95	; 149
 782:	f0 e0       	ldi	r31, 0x00	; 0
 784:	90 81       	ld	r25, Z
 786:	96 60       	ori	r25, 0x06	; 6
 788:	90 83       	st	Z, r25
	
	// F_CPU: 7372800UL, 전송속도(BaudRate): 115200 => UBRRnH + UBRRnL = 3
	UBRR0H = 0x00;
 78a:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 3;	
 78e:	93 e0       	ldi	r25, 0x03	; 3
 790:	99 b9       	out	0x09, r25	; 9
	
	/*interrupt setting*/
	EIMSK = 1 << INT7;
 792:	89 bf       	out	0x39, r24	; 57
	//EICRA = 1 << ISC01 | 0 << ISC00;
	EICRB = 1 << ISC71;	//기본설정값이 0이다 => 0은 굳이 설정하지않아도 된다.
 794:	8a bf       	out	0x3a, r24	; 58
	//하강 엣지 :: Height -> Low LEVEL :: 버튼을 땔 때 동작
	//상승 엣지 :: Low -> Height LEVEL :: 버튼을 누를 때 동작
	
	sei();
 796:	78 94       	sei
	
	Lcd_Init();
 798:	f2 dc       	rcall	.-1564   	; 0x17e <Lcd_Init>
 79a:	2f ef       	ldi	r18, 0xFF	; 255
 79c:	8f e3       	ldi	r24, 0x3F	; 63
 79e:	9b e0       	ldi	r25, 0x0B	; 11
 7a0:	21 50       	subi	r18, 0x01	; 1
 7a2:	80 40       	sbci	r24, 0x00	; 0
 7a4:	90 40       	sbci	r25, 0x00	; 0
 7a6:	e1 f7       	brne	.-8      	; 0x7a0 <main+0x5a>
 7a8:	00 c0       	rjmp	.+0      	; 0x7aa <main+0x64>
	_delay_ms(500);
	Lcd_Clear();
 7aa:	00 00       	nop
 7ac:	df dc       	rcall	.-1602   	; 0x16c <Lcd_Clear>
 7ae:	8f ef       	ldi	r24, 0xFF	; 255
 7b0:	9b e6       	ldi	r25, 0x6B	; 107
 7b2:	01 97       	sbiw	r24, 0x01	; 1
 7b4:	f1 f7       	brne	.-4      	; 0x7b2 <main+0x6c>
 7b6:	00 c0       	rjmp	.+0      	; 0x7b8 <main+0x72>
 7b8:	00 00       	nop
	
	while(1)
	{

		
		if(signal)	//signal == 1
 7ba:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <__data_end>
 7be:	88 23       	and	r24, r24
		{
			Urt();
 7c0:	11 f0       	breq	.+4      	; 0x7c6 <main+0x80>
 7c2:	15 df       	rcall	.-470    	; 0x5ee <Urt>
		}
		else
		{	//signal == 0
			Intr();
 7c4:	fa cf       	rjmp	.-12     	; 0x7ba <main+0x74>
 7c6:	64 de       	rcall	.-824    	; 0x490 <Intr>
 7c8:	f8 cf       	rjmp	.-16     	; 0x7ba <main+0x74>

000007ca <__udivmodsi4>:
 7ca:	a1 e2       	ldi	r26, 0x21	; 33
 7cc:	1a 2e       	mov	r1, r26
 7ce:	aa 1b       	sub	r26, r26
 7d0:	bb 1b       	sub	r27, r27
 7d2:	fd 01       	movw	r30, r26
 7d4:	0d c0       	rjmp	.+26     	; 0x7f0 <__udivmodsi4_ep>

000007d6 <__udivmodsi4_loop>:
 7d6:	aa 1f       	adc	r26, r26
 7d8:	bb 1f       	adc	r27, r27
 7da:	ee 1f       	adc	r30, r30
 7dc:	ff 1f       	adc	r31, r31
 7de:	a2 17       	cp	r26, r18
 7e0:	b3 07       	cpc	r27, r19
 7e2:	e4 07       	cpc	r30, r20
 7e4:	f5 07       	cpc	r31, r21
 7e6:	20 f0       	brcs	.+8      	; 0x7f0 <__udivmodsi4_ep>
 7e8:	a2 1b       	sub	r26, r18
 7ea:	b3 0b       	sbc	r27, r19
 7ec:	e4 0b       	sbc	r30, r20
 7ee:	f5 0b       	sbc	r31, r21

000007f0 <__udivmodsi4_ep>:
 7f0:	66 1f       	adc	r22, r22
 7f2:	77 1f       	adc	r23, r23
 7f4:	88 1f       	adc	r24, r24
 7f6:	99 1f       	adc	r25, r25
 7f8:	1a 94       	dec	r1
 7fa:	69 f7       	brne	.-38     	; 0x7d6 <__udivmodsi4_loop>
 7fc:	60 95       	com	r22
 7fe:	70 95       	com	r23
 800:	80 95       	com	r24
 802:	90 95       	com	r25
 804:	9b 01       	movw	r18, r22
 806:	ac 01       	movw	r20, r24
 808:	bd 01       	movw	r22, r26
 80a:	cf 01       	movw	r24, r30
 80c:	08 95       	ret

0000080e <strcmp>:
 80e:	fb 01       	movw	r30, r22
 810:	dc 01       	movw	r26, r24
 812:	8d 91       	ld	r24, X+
 814:	01 90       	ld	r0, Z+
 816:	80 19       	sub	r24, r0
 818:	01 10       	cpse	r0, r1
 81a:	d9 f3       	breq	.-10     	; 0x812 <strcmp+0x4>
 81c:	99 0b       	sbc	r25, r25
 81e:	08 95       	ret

00000820 <_exit>:
 820:	f8 94       	cli

00000822 <__stop_program>:
 822:	ff cf       	rjmp	.-2      	; 0x822 <__stop_program>
